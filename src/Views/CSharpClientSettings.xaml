<UserControl x:Class="Unchase.OpenAPI.ConnectedService.Views.CSharpClientSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Unchase.OpenAPI.ConnectedService.ViewModels"
             xmlns:converters="clr-namespace:Unchase.OpenAPI.ConnectedService.Converters"
             xmlns:commands="clr-namespace:Unchase.OpenAPI.ConnectedService.Common.Commands"
             mc:Ignorable="d"
             d:DesignHeight="400"
             d:DesignWidth="768">
    <UserControl.Resources>
        <viewModels:CSharpClientSettingsViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
        <converters:StringArrayConverter x:Key="StringArrayConverter" />
        <converters:VisibilityToHyperlinkTextConverter x:Key="VisibilityToHyperlinkTextConverter"/>
        <commands:StackPanelChangeVisibilityCommand x:Key="StackPanelChangeVisibilityCommand"/>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" Margin="0, 20, 0, 0">
            You can use default settings to generate client code file or click on hyperlinks to choose custom settings :
        </TextBlock>

        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" Margin="0, 20, 0, 0">
            <Bold>Main Settings</Bold> (<Hyperlink Name="MainSettingsHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=MainSettingsPanel}" >
                <TextBlock TextWrapping="WrapWithOverflow" Name="MainSettingsHyperlinkText" Text="{Binding ElementName=MainSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/></Hyperlink>)
        </TextBlock>
        <StackPanel x:Name="MainSettingsPanel" HorizontalAlignment="Stretch" VerticalAlignment="Top" Visibility="Collapsed" Margin="20, 5, 0, 0">
            <TextBlock TextWrapping="WrapWithOverflow" Text="Namespace (empty for auto-generated namespace) :" FontWeight="Bold" Margin="0, 5, 0, 0" />
            <TextBox Text="{Binding Command.Namespace, Mode=TwoWay}"
                     ToolTip="Namespace"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Center"
                     Margin="0, 5, 10, 5"/>

            <TextBlock TextWrapping="WrapWithOverflow" Text="Additional Namespace Usages (comma separated) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
            <TextBox Text="{Binding Command.AdditionalNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                     ToolTip="AdditionalNamespaceUsages"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Center"
                     Margin="0, 5, 10, 5"/>

            <CheckBox IsChecked="{Binding Command.GenerateContractsOutput, Mode=TwoWay}"
                      ToolTip="GenerateContractsOutput"
                      Content="Generate contracts output."
                      HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0, 5, 0, 0"/>
            <StackPanel Visibility="{Binding Command.GenerateContractsOutput, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                <TextBlock TextWrapping="WrapWithOverflow" Text="Contracts Namespace :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ContractsNamespace, Mode=TwoWay}"
                         ToolTip="ContractsNamespace"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"

                         Margin="0, 5, 10, 5"/>
                <TextBlock TextWrapping="WrapWithOverflow" Text="Additional Contract Namespace Usages (comma separated) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.AdditionalContractNamespaceUsages, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                         ToolTip="AdditionalContractNamespaceUsages"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>
            </StackPanel>

            <CheckBox IsChecked="{Binding Command.GenerateExceptionClasses, Mode=TwoWay}"
                      Content="Generate exception classes (when disabled, exception classes must be imported)."
                      ToolTip="GenerateExceptionClasses"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Bottom"
                      Margin="0,5,0,0"/>
            <StackPanel Visibility="{Binding Command.GenerateExceptionClasses, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                <TextBlock TextWrapping="WrapWithOverflow" Text="Exception class name (may contain the '{controller}' placeholder) :"
                           FontWeight="Bold"
                           Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ExceptionClass, Mode=TwoWay}"
                         ToolTip="ExceptionClass"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>
            </StackPanel>
        </StackPanel>

        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
            <Bold>Client</Bold> (<Hyperlink Name="ClientSettingsHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=ClientSettingsPanel}">
                <TextBlock TextWrapping="WrapWithOverflow" Name="ClientSettingsHyperlinkText" Text="{Binding ElementName=ClientSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
            </Hyperlink>)
        </TextBlock>
        <StackPanel x:Name="ClientSettingsPanel" Visibility="Collapsed" Margin="20,0,0,0">
            <CheckBox IsChecked="{Binding Command.GenerateClientClasses, Mode=TwoWay}"
                      ToolTip="GenerateClientClasses"
                      Content="Generate Client Classes."
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Bottom"
                      Margin="0,5,0,0">
            </CheckBox>
            <StackPanel Visibility="{Binding Command.GenerateClientClasses, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap">
                    <Run Text="Operation Generation Mode :" FontWeight="Bold" />
                    <LineBreak />
                    The {controller} placeholder of the Class Name is replaced by generated client name (depends on the OperationGenerationMode strategy).
                </TextBlock>
                <ComboBox SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}"
                          ToolTip="OperationGenerationMode"
                          ItemsSource="{Binding OperationGenerationModes}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Margin="0,5,10,5" />

                <TextBlock TextWrapping="WrapWithOverflow" Text="Class Name :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ClassName, Mode=TwoWay}"
                         ToolTip="ClassName"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Client class access modifier :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ClientClassAccessModifier, Mode=TwoWay}"
                         ToolTip="ClientClassAccessModifier"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Methods with a protected access modifier to use in partial methods ('classname.methodname', comma separated) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ProtectedMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                         ToolTip="ProtectedMethods"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.UseBaseUrl, Mode=TwoWay}"
                          Content="Use the base URL for the request."
                          ToolTip="UseBaseUrl"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5"/>
                <CheckBox IsChecked="{Binding Command.GenerateBaseUrlProperty, Mode=TwoWay}"
                          Visibility="{Binding Command.UseBaseUrl, Converter={StaticResource VisibilityConverter}}"
                          Content="Generate the BaseUrl property (must be defined on the base class otherwise)."
                          ToolTip="GenerateBaseUrlProperty"
                          HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.GenerateOptionalParameters, Mode=TwoWay}"
                          ToolTip="GenerateOptionalParameters"
                          HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0, 5, 10, 5">
                    <TextBlock TextWrapping="Wrap" Text="Generate optional parameters (reorder parameters (required first, optional at the end) and generate optional parameters)."/>
                </CheckBox>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Excluded Parameter Names (comma separated) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox ToolTip="ExcludedParameterNames"
                         Text="{Binding Command.ExcludedParameterNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.GenerateSyncMethods, Mode=TwoWay}"
                          Content="Generate synchronous methods (not recommended)."
                          ToolTip="GenerateSyncMethods"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.ExposeJsonSerializerSettings, Mode=TwoWay}"
                          Content="Expose the JsonSerializerSettings property."
                          ToolTip="ExposeJsonSerializerSettings"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.InjectHttpClient, Mode=TwoWay}"
                          ToolTip="InjectHttpClient"
                          Content="Inject HttpClient via constructor (life cycle is managed by the caller)."
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.DisposeHttpClient, Mode=TwoWay}"
                          ToolTip="DisposeHttpClient"
                          Visibility="{Binding Command.InjectHttpClient, Converter={StaticResource NotConverter}}"
                          Content="Dispose the HttpClient (life cycle must be handled by the base class and CreateHttpClientAsync())."
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.GenerateClientInterfaces, Mode=TwoWay}"
                          ToolTip="GenerateClientInterfaces"
                          Content="Generate interfaces for Client classes."
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom" Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.SerializeTypeInformation, Mode=TwoWay}"
                          ToolTip="SerializeTypeInformation"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Margin="0, 5, 10, 5">
                    <TextBlock TextWrapping="Wrap" Text="Serialize the type information in a $type property (not recommended, also sets TypeNameHandling = Auto)."/>
                </CheckBox>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Http Client Type :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.HttpClientType, Mode=TwoWay}"
                         ToolTip="HttpClientType"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="WrapWithOverflow" Text="DateTime format for method parameters :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ParameterDateTimeFormat, Mode=TwoWay}"
                         ToolTip="ParameterDateTimeFormat"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Null value used for query parameters which are null :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.QueryNullValue, Mode=TwoWay}"
                         ToolTip="QueryNullValue"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Base Class and Configuration Class (<Hyperlink Name="BaseClassAndConfigurationClassHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=BaseClassAndConfigurationClassPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="BaseClassAndConfigurationClassHyperlinkText" Text="{Binding ElementName=BaseClassAndConfigurationClassPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="BaseClassAndConfigurationClassPanel" Margin="20,0,0,0">
                    <TextBlock TextWrapping="WrapWithOverflow" Text="Base Class Name (optional) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                    <TextBox Text="{Binding Command.ClientBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         ToolTip="ClientBaseClass"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                    <StackPanel Visibility="{Binding Command.ClientBaseClass, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                        <CheckBox IsChecked="{Binding Command.UseHttpClientCreationMethod, Mode=TwoWay}" Margin="0, 5, 10, 5"
                                                        Visibility="{Binding Command.InjectHttpClient, Converter={StaticResource NotConverter}}"
                                                        ToolTip="UseHttpClientCreationMethod">
                            <TextBlock Text="Call the CreateHttpClientAsync method on the client base class to create a new HttpClient instance" TextWrapping="Wrap" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding Command.UseHttpRequestMessageCreationMethod, Mode=TwoWay}"
                                                        ToolTip="UseHttpRequestMessageCreationMethod" Margin="0, 5, 10, 5">
                            <TextBlock Text="Call the CreateHttpRequestMessageAsync method on the client base class to create a new HttpRequestMessage instance" TextWrapping="Wrap" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding Command.GenerateUpdateJsonSerializerSettingsMethod, Mode=TwoWay}"
                                                        Content="Generate the UpdateJsonSerializerSettings method (must be implemented in the base class otherwise)."
                                                        ToolTip="GenerateUpdateJsonSerializerSettingsMethod"
                                                        Margin="0, 5, 10, 5" />
                        <TextBlock TextWrapping="WrapWithOverflow" Text="Configuration Class Name (passed to base class ctor, optional)" FontWeight="Bold" Margin="0, 5, 10, 5" />
                        <TextBox Text="{Binding Command.ConfigurationClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ToolTip="ConfigurationClass" Margin="0, 5, 10, 5" />
                    </StackPanel>
                </StackPanel>

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Response wrapping (<Hyperlink Name="ResponseWrappingHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=ResponseWrappingPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="ResponseWrappingHyperlinkText" Text="{Binding ElementName=ResponseWrappingPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="ResponseWrappingPanel" Margin="20,0,0,0">
                    <CheckBox IsChecked="{Binding Command.WrapDtoExceptions, Mode=TwoWay}"
                              ToolTip="WrapDtoExceptions"
                              Content="Wrap DTO exceptions in a SwaggerException instance."
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Bottom"
                              Margin="0, 5, 10, 5"/>

                    <CheckBox IsChecked="{Binding Command.WrapResponses, Mode=TwoWay}"
                              ToolTip="WrapResponses"
                              Content="Wrap success responses to allow full response access."
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Bottom"
                              Margin="0, 5, 10, 5"/>

                    <StackPanel Visibility="{Binding Command.WrapResponses, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                        <TextBlock Text="Methods where responses are wrapped (empty for all, 'ControllerName.MethodName', comma separated) :" TextWrapping="WrapWithOverflow" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                        <TextBox ToolTip="WrapResponseMethods"
                                 Text="{Binding Command.WrapResponseMethods, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 Margin="0, 5, 10, 5"/>

                        <CheckBox IsChecked="{Binding Command.GenerateResponseClasses, Mode=TwoWay}"
                                  ToolTip="GenerateResponseClasses"
                                  Content="Generate response classes (when disabled, response classes must be imported)."
                                  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0, 5, 10, 5"/>

                        <StackPanel Visibility="{Binding Command.GenerateResponseClasses, Converter={StaticResource VisibilityConverter}}">
                            <TextBlock TextWrapping="WrapWithOverflow" Text="Response class name (may contain the '{controller}' placeholder) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                            <TextBox Text="{Binding Command.ResponseClass, Mode=TwoWay}"
                                     ToolTip="ResponseClass"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     Margin="0, 5, 10, 5"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Parameter types (<Hyperlink Name="ParameterTypesHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=ParameterTypesPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="ParameterTypesHyperlinkText" Text="{Binding ElementName=ParameterTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="ParameterTypesPanel" Margin="20,0,0,0">
                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Array Type :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                    <TextBox Text="{Binding Command.ParameterArrayType, Mode=TwoWay}"
                             ToolTip="ParameterArrayType"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Margin="0, 5, 10, 5"/>

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Dictionary Type :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                    <TextBox Text="{Binding Command.ParameterDictionaryType, Mode=TwoWay}"
                             ToolTip="ParameterDictionaryType"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Margin="0, 5, 10, 5"/>
                </StackPanel>

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Response types (<Hyperlink Name="ResponseTypesHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=ResponseTypesPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="ResponseTypesHyperlinkText" Text="{Binding ElementName=ResponseTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="ResponseTypesPanel" Margin="20,0,0,0">
                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Array Type :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                    <TextBox Text="{Binding Command.ResponseArrayType, Mode=TwoWay}"
                             ToolTip="ResponseArrayType"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Margin="0, 5, 10, 5"/>

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Dictionary Type :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                    <TextBox Text="{Binding Command.ResponseDictionaryType, Mode=TwoWay}"
                             ToolTip="ResponseDictionaryType"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             Margin="0, 5, 10, 5"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
            <Bold>DTO classes</Bold> (<Hyperlink Name="DtoClassesSettingsHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=DtoClassesSettingsPanel}">
                <TextBlock TextWrapping="WrapWithOverflow" Name="DtoClassesSettingsHyperlinkText" Text="{Binding ElementName=DtoClassesSettingsPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
            </Hyperlink>)
        </TextBlock>
        <StackPanel x:Name="DtoClassesSettingsPanel" Visibility="Collapsed" Margin="20,0,0,0">
            <CheckBox IsChecked="{Binding Command.GenerateDtoTypes, Mode=TwoWay}" Margin="0, 5, 10, 5">
                <TextBlock Text="Generate DTO Types (e.g. request and response classes)" ToolTip="GenerateDtoTypes" TextWrapping="Wrap" />
            </CheckBox>
            <StackPanel Visibility="{Binding Command.GenerateDtoTypes, Converter={StaticResource VisibilityConverter}}" Margin="20,0,0,0">
                <TextBlock TextWrapping="WrapWithOverflow" Text="Excluded Type Names (comma separated, must be defined in another namespace) :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.ExcludedTypeNames, Mode=TwoWay, Converter={StaticResource StringArrayConverter}, ConverterParameter=','}"
                         ToolTip="ExcludedTypeNames"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <TextBlock TextWrapping="WrapWithOverflow" Text="DTO class/enum access modifier :" FontWeight="Bold" Margin="0, 5, 0, 0"/>
                <TextBox Text="{Binding Command.TypeAccessModifier, Mode=TwoWay}"
                         ToolTip="TypeAccessModifier"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Margin="0, 5, 10, 5"/>

                <CheckBox IsChecked="{Binding Command.GenerateDefaultValues, Mode=TwoWay}"
                          ToolTip="GenerateDefaultValues" Margin="0, 5, 10, 5">
                    <TextBlock Text="Generate default values for properties (if default value is specified)." TextWrapping="Wrap" />
                </CheckBox>
                <CheckBox IsChecked="{Binding Command.GenerateImmutableArrayProperties, Mode=TwoWay}"
                          ToolTip="GenerateImmutableArrayProperties" Margin="0, 5, 10, 5">
                    <TextBlock Text="Remove the setter for non-nullable array properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateImmutableDictionaryProperties, Mode=TwoWay}"
                          ToolTip="GenerateImmutableDictionaryProperties" Margin="0, 5, 10, 5">
                    <TextBlock Text="Remove the setter for non-nullable dictionary properties." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateDataAnnotations, Mode=TwoWay}"
                          ToolTip="GenerateDataAnnotations" Margin="0, 5, 10, 5">
                    <TextBlock Text="Generate data annotation attributes." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.GenerateJsonMethods, Mode=TwoWay}"
                          ToolTip="GenerateJsonMethods" Margin="0, 5, 10, 5">
                    <TextBlock Text="Generate ToJson() and FromJson() methods." TextWrapping="Wrap" />
                </CheckBox>

                <CheckBox IsChecked="{Binding Command.EnforceFlagEnums, Mode=TwoWay}"
                          ToolTip="EnforceFlagEnums" Margin="0, 5, 10, 5">
                    <TextBlock Text="Always generate enums as bit flags (with [Flags] attribute)." TextWrapping="Wrap" />
                </CheckBox>

                <TextBlock TextWrapping="WrapWithOverflow" Text="Class Style" FontWeight="Bold" Margin="0, 5, 10, 5" />
                <ComboBox SelectedItem="{Binding Command.ClassStyle, Mode=TwoWay}"
                          ToolTip="ClassStyle"
                          ItemsSource="{Binding ClassStyles}" Margin="0,5,10,5" />

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Serialization (<Hyperlink Name="SerializationHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=SerializationPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="SerializationHyperlinkText" Text="{Binding ElementName=SerializationPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="SerializationPanel" Margin="20,0,0,0">
                    <CheckBox IsChecked="{Binding Command.RequiredPropertiesMustBeDefined, Mode=TwoWay}" ToolTip="RequiredPropertiesMustBeDefined" Margin="0, 5, 10, 5">
                        <TextBlock Text="Required properties must be defined in JSON (sets Required.Always when the property is required)." TextWrapping="Wrap" />
                    </CheckBox>

                    <CheckBox IsChecked="{Binding Command.HandleReferences, Mode=TwoWay}"
                              Content="Use preserve references handling (All) in the JSON serializer."
                              ToolTip="HandleReferences" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Custom Json.NET converter types (optional, multiple on separate lines) :" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.JsonConverters, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}"
                             ToolTip="JsonConverters" Height="52" AcceptsReturn="True"
                             VerticalScrollBarVisibility="Visible" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="JsonSerializerSettings transformation method name (we recommend GenerateUpdateJsonSerializerSettingsMethod instead) :" FontWeight="Bold"
                               Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.JsonSerializerSettingsTransformationMethod, Mode=TwoWay}"
                             ToolTip="JsonSerializerSettingsTransformationMethod"
                             Margin="0, 5, 10, 5" />
                </StackPanel>

                <TextBlock TextWrapping="Wrap" Margin="0, 5, 10, 5">
                    Primitive Types (<Hyperlink Name="PrimitiveTypesHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=PrimitiveTypesPanel}">
                        <TextBlock TextWrapping="WrapWithOverflow" Name="PrimitiveTypesHyperlinkText" Text="{Binding ElementName=PrimitiveTypesPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
                    </Hyperlink>)
                </TextBlock>
                <StackPanel x:Name="PrimitiveTypesPanel" Margin="20,0,0,0">
                    <TextBlock TextWrapping="WrapWithOverflow" Text="Date Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.DateType, Mode=TwoWay}" ToolTip="DateType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Date Time Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.DateTimeType, Mode=TwoWay}" ToolTip="DateTimeType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Time Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.TimeType, Mode=TwoWay}" ToolTip="TimeType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Time Span Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.TimeSpanType, Mode=TwoWay}" ToolTip="TimeSpanType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Array Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.ArrayType, Mode=TwoWay}" ToolTip="ArrayType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Array Instance Type (empty = ArrayType)" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.ArrayInstanceType, Mode=TwoWay}" ToolTip="ArrayInstanceType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Dictionary Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.DictionaryType, Mode=TwoWay}" ToolTip="DictionaryType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Dictionary Instance Type (empty = DictionaryType)" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.DictionaryInstanceType, Mode=TwoWay}" ToolTip="DictionaryInstanceType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Array Base Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.ArrayBaseType, Mode=TwoWay}" ToolTip="ArrayBaseType" Margin="0, 5, 10, 5" />

                    <TextBlock TextWrapping="WrapWithOverflow" Text="Generic Dictionary Base Type" FontWeight="Bold" Margin="0, 5, 10, 5" />
                    <TextBox Text="{Binding Command.DictionaryBaseType, Mode=TwoWay}" ToolTip="DictionaryBaseType" Margin="0, 5, 10, 5" />
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
            <Bold>Swagger Information</Bold> (<Hyperlink Name="SwaggerInformationHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=SwaggerInformationPanel}">
                <TextBlock TextWrapping="WrapWithOverflow" Name="SwaggerInformationHyperlinkText" Text="{Binding ElementName=SwaggerInformationPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
            </Hyperlink>)
        </TextBlock>
        <StackPanel x:Name="SwaggerInformationPanel" Visibility="Collapsed" Margin="20,0,0,0">
            <TextBlock TextWrapping="WrapWithOverflow" Text="Service host (optional, use '.' to remove the hostname)" FontWeight="Bold" Margin="0, 5, 10, 5" />
            <TextBox Text="{Binding Command.ServiceHost, Mode=TwoWay}" ToolTip="ServiceHost" Margin="0, 5, 10, 5" />

            <TextBlock TextWrapping="WrapWithOverflow" Text="Service schemes (optional, 'http', 'https', 'ws', 'wss', multiple on separate lines)" FontWeight="Bold" Margin="0, 5, 10, 5" />
            <TextBox Text="{Binding Command.ServiceSchemes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}"
                     ToolTip="ServiceSchemes" Height="52" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="0, 5, 10, 5" />
        </StackPanel>

        <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">
            <Bold>Templating</Bold> (<Hyperlink Name="TemplatingHyperlink" Command="{StaticResource StackPanelChangeVisibilityCommand}" CommandParameter="{Binding ElementName=TemplatingPanel}">
                <TextBlock TextWrapping="WrapWithOverflow" Name="TemplatingHyperlinkText" Text="{Binding ElementName=TemplatingPanel, Path=Visibility, Converter={StaticResource VisibilityToHyperlinkTextConverter}}"/>
            </Hyperlink>)
        </TextBlock>
        <StackPanel x:Name="TemplatingPanel" Visibility="Collapsed" Margin="20,0,0,0">
            <TextBlock TextWrapping="WrapWithOverflow" Text="Template directory :" FontWeight="Bold" Margin="0, 5, 10, 5" />
            <TextBox Text="{Binding Command.TemplateDirectory, Mode=TwoWay}"
                     ToolTip="TemplateDirectory"
                     Margin="0, 5, 10, 5" />
        </StackPanel>
    </StackPanel>
</UserControl>
